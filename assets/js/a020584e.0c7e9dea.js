"use strict";(self.webpackChunkarchipelago_documentation_docsaurus=self.webpackChunkarchipelago_documentation_docsaurus||[]).push([[2083],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||r;return t?o.createElement(h,l(l({ref:n},c),{},{components:t})):o.createElement(h,l({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var o=t(7462),a=(t(7294),t(3905));const r={title:"Moving from archipelago-deployment to archipelago-deployment-live",tags:["Archipelago-deployment","Archipelago-deployment-live"]},l="Moving from archipelago-deployment to archipelago-deployment-live",i={unversionedId:"archipelago-deployment-live-moveToLive",id:"archipelago-deployment-live-moveToLive",title:"Moving from archipelago-deployment to archipelago-deployment-live",description:"What is this documentation for?",source:"@site/docs/archipelago-deployment-live-moveToLive.md",sourceDirName:".",slug:"/archipelago-deployment-live-moveToLive",permalink:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-moveToLive",draft:!1,editUrl:"https://pr.new/github.com/WWU-MaxBronsema/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-moveToLive.md",tags:[{label:"Archipelago-deployment",permalink:"/archipelago-documentation-docusaurus/docs/tags/archipelago-deployment"},{label:"Archipelago-deployment-live",permalink:"/archipelago-documentation-docusaurus/docs/tags/archipelago-deployment-live"}],version:"current",frontMatter:{title:"Moving from archipelago-deployment to archipelago-deployment-live",tags:["Archipelago-deployment","Archipelago-deployment-live"]},sidebar:"tutorialSidebar",previous:{title:"Managing, sheltering, pruning, and nurturing your own custom Archipelago",permalink:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-gitworkflow"},next:{title:"Archipelago-deployment-live",permalink:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-readme"}},s={},p=[{value:"What is this documentation for?",id:"what-is-this-documentation-for",level:2},{value:"What is this documentation not for?",id:"what-is-this-documentation-not-for",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Differences between both deployments strategies.",id:"differences-between-both-deployments-strategies",level:2},{value:"Commonalities between both deployment strategies.",id:"commonalities-between-both-deployment-strategies",level:2},{value:"Getting the new repo in place",id:"getting-the-new-repo-in-place",level:2},{value:"Backing up",id:"backing-up",level:2},{value:"Step 1:",id:"step-1",level:3},{value:"Step 2:",id:"step-2",level:3},{value:"Step 3:",id:"step-3",level:3},{value:"The directory structures",id:"the-directory-structures",level:2},{value:"The Data",id:"the-data",level:2},{value:"Copying the Data into the new Structure",id:"copying-the-data-into-the-new-structure",level:3},{value:"Step 1:",id:"step-1-1",level:4},{value:"Step 2:",id:"step-2-1",level:4},{value:"Step 3:",id:"step-3-1",level:4},{value:"The Web",id:"the-web",level:2},{value:"Copying the Web into the new Structure",id:"copying-the-web-into-the-new-structure",level:3},{value:"Step 1:",id:"step-1-2",level:4},{value:"SSL, Enviromentals, Configurations, Settings and Docker",id:"ssl-enviromentals-configurations-settings-and-docker",level:2},{value:"Shutdown the old one, start the new one",id:"shutdown-the-old-one-start-the-new-one",level:2}],c={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"moving-from-archipelago-deployment-to-archipelago-deployment-live"},"Moving from ",(0,a.kt)("inlineCode",{parentName:"h1"},"archipelago-deployment")," to ",(0,a.kt)("inlineCode",{parentName:"h1"},"archipelago-deployment-live")),(0,a.kt)("h2",{id:"what-is-this-documentation-for"},"What is this documentation for?"),(0,a.kt)("p",null,"If you have been using/running/populating an instance with Archipelago Digital Objects that was set up using our simpler-to-deploy but harder-to-customize ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/esmero/archipelago-deployment"},"archipelago-deployment")," strategy and can't wait to move to this one\u2014meant for a larger (and somehow easier to maintain and upgrade on the long run) instance\u2014but (wait!) you do not want to ingest again, set up again, configure users, etc. (You already did that!), this is your documentation."),(0,a.kt)("h2",{id:"what-is-this-documentation-not-for"},"What is this documentation not for?"),(0,a.kt)("p",null,"To install an ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment-live")," from scratch or to keep (forever) syncing between the two deployment options in a quantum phase shifting eternum like a time crystal."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"An instance of Archipelago (working, tested) installed using ",(0,a.kt)("inlineCode",{parentName:"li"},"archipelago-deployment")," as a basis."),(0,a.kt)("li",{parentName:"ul"},"Basic knowledge and instincts on how to run Terminal Commands, copy files, run ",(0,a.kt)("inlineCode",{parentName:"li"},"composer"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"drush"),", Linux Permissions, and ",(0,a.kt)("inlineCode",{parentName:"li"},"git")," of course."),(0,a.kt)("li",{parentName:"ul"},"Patience. You can't skip steps here. Also, Patience again since you may have stretched (good) your current instance to do way more than we thought it could."),(0,a.kt)("li",{parentName:"ul"},"Time to read the main Documentation of this Repo to have a basic knowledge of how this is deployed. Recommended even if you are not going to deploy one from scratch here."),(0,a.kt)("li",{parentName:"ul"},"For Shell Commands documented here please copy line by line\u2014not the whole block.")),(0,a.kt)("h2",{id:"differences-between-both-deployments-strategies"},"Differences between both deployments strategies."),(0,a.kt)("p",null,"In a nutshell: ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment-live")," uses a different folder structure moving configuration storage, data storage outside of your webroot, and allows a much finer control of your settings (safer) and Docker containers.\nIn a nutshell inside the first nutshell: ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment-live")," also ignores more files so keeping customized versions, your own packages, your own settings around, and version controlled is much easier.\nLastly: ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment-live")," makes more use of Cloud Services, e.g. so if you have been running ",(0,a.kt)("inlineCode",{parentName:"p"},"min.io")," as local mounted storage you may now consider moving storage (files) to a cloud service like AWS S3."),(0,a.kt)("h2",{id:"commonalities-between-both-deployment-strategies"},"Commonalities between both deployment strategies."),(0,a.kt)("p",null,"In a nutshell: Since both run the same code and use the same Docker Containers, the data is actually the same. Everything is just persisted in different places."),(0,a.kt)("h2",{id:"getting-the-new-repo-in-place"},"Getting the new repo in place"),(0,a.kt)("p",null,"First you need to clone this repository and (hopefully) store in the same parent folder to your current ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," one. For the purpose of this tutorial we will assume you have ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," cloned in this location: ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/archipelago-deployment"),"."),(0,a.kt)("p",null,"Locate your ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," folder in your terminal. Do an ",(0,a.kt)("inlineCode",{parentName:"p"},"ls")," to make sure you can see the folder (not the content) and run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/esmero/archipelago-deployment-live\ncd archipelago-deployment-live\ngit checkout 1.0.0-RC3\ncd ..\ncd archipelago-deployment\n")),(0,a.kt)("p",null,"Now you have side by side ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/archipelago_deployment")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/archipelago-deployment-live"),"."),(0,a.kt)("p",null,"This will give you the base structure."),(0,a.kt)("p",null,"Before touching anything let's start by generating a backup of your current deployment (safety first)."),(0,a.kt)("h2",{id:"backing-up"},"Backing up"),(0,a.kt)("h3",{id:"step-1"},"Step 1:"),(0,a.kt)("p",null,"Shut down your ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," ensemble. Inside your original ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," folder run this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose down\n")),(0,a.kt)("h3",{id:"step-2"},"Step 2:"),(0,a.kt)("p",null,"Verify all containers are actually down:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker ps\n")),(0,a.kt)("p",null,"The following command should return an empty listing. If anything is still running, wait a little longer and run the previous command again."),(0,a.kt)("h3",{id:"step-3"},"Step 3:"),(0,a.kt)("p",null,"Now let's tar.gz the whole ensemble with data and configs. As an example we will save this into your ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME")," folder.\nAs a good practice we append the ",(0,a.kt)("strong",{parentName:"p"},"current date")," (YEAR-MONTH-DAY) to the filename. Here we assume today is December 1st of 2021:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo tar -czvpf $HOME/archipelago-deployment-backup-20211201.tar.gz ../archipelago-deployment\n")),(0,a.kt)("p",null,"The process may take a few minutes. Now let's verify that all is there and that the ",(0,a.kt)("inlineCode",{parentName:"p"},"tar.gz")," is not corrupt:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"tar -tvvf $HOME/archipelago-deployment-backup-20211201.tar.gz \n")),(0,a.kt)("p",null,"You will see a listing of files. If corrupt (do you have enough space? did your ssh connection drop?) you will see:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"tar: Unrecognized archive format\n")),(0,a.kt)("p",null,"Done! If you are running a public instance we can allow ourselves to start Docker again to avoid downtime:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -d\n")),(0,a.kt)("h2",{id:"the-directory-structures"},"The directory structures"),(0,a.kt)("p",null,"Now that you backed all up we can spend some minutes looking at both directory structures."),(0,a.kt)("p",null,"If you observe both deployment strategies side by side you will inmediately notice the most important similarities and also differences:"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"archipelago-deployment Live"),(0,a.kt)("th",null,"archipelago-deployment")),(0,a.kt)("tr",null,(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 config_storage \u2502\xa0\xa0 \u251c\u2500\u2500 iiifconfig \u2502\xa0\xa0 \u251c\u2500\u2500 nginxconfig \u2502\xa0\xa0 \u251c\u2500\u2500 nginxconfig_selfcert \u2502\xa0\xa0 \u251c\u2500\u2500 php-fpm \u2502\xa0\xa0 \u2514\u2500\u2500 solrconfig \u251c\u2500\u2500 data_storage \u2502\xa0\xa0 \u251c\u2500\u2500 db \u2502\xa0\xa0 \u251c\u2500\u2500 iiifcache \u2502\xa0\xa0 \u251c\u2500\u2500 iiiftmp \u2502\xa0\xa0 \u251c\u2500\u2500 letsencrypt \u2502\xa0\xa0 \u251c\u2500\u2500 minio-data \u2502\xa0\xa0 \u251c\u2500\u2500 ngnixcache \u2502\xa0\xa0 \u251c\u2500\u2500 selfcert \u2502\xa0\xa0 \u251c\u2500\u2500 solrcore \u2502\xa0\xa0 \u2514\u2500\u2500 solrlib \u251c\u2500\u2500 deploy \u2502\xa0\xa0 \u251c\u2500\u2500 azure-kubernetes \u2502\xa0\xa0 \u251c\u2500\u2500 ec2-docker \u2502\xa0\xa0 \u2514\u2500\u2500 kubernetes \u251c\u2500\u2500 docs \u2514\u2500\u2500 drupal \u2502   \u251c\u2500\u2500 config \u2502\xa0\xa0 \u251c\u2500\u2500 d8content \u2502\xa0\xa0 \u251c\u2500\u2500 docs \u2502\xa0\xa0 \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 patches \u2502\xa0\xa0 \u251c\u2500\u2500 persistent \u2502\xa0\xa0 \u251c\u2500\u2500 private \u2502\xa0\xa0 \u251c\u2500\u2500 scripts \u2502\xa0\xa0 \u251c\u2500\u2500 vendor \u2502\xa0\xa0 \u251c\u2500\u2500 web \u2502\xa0\xa0 \u2514\u2500\u2500 xdebug")),(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 config \u2502\xa0\xa0 \u2514\u2500\u2500 sync \u251c\u2500\u2500 d8content \u2502\xa0\xa0 \u2514\u2500\u2500 metadatadisplays \u251c\u2500\u2500 docs \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 Commands \u2502\xa0\xa0 \u2514\u2500\u2500 sites \u251c\u2500\u2500 nginxconfigford8 \u251c\u2500\u2500 patches \u251c\u2500\u2500 persistent \u2502\xa0\xa0 \u251c\u2500\u2500 db \u2502\xa0\xa0 \u251c\u2500\u2500 iiifcache \u2502\xa0\xa0 \u251c\u2500\u2500 iiifconfig \u2502\xa0\xa0 \u251c\u2500\u2500 miniodata \u2502\xa0\xa0 \u251c\u2500\u2500 solrconfig \u2502\xa0\xa0 \u251c\u2500\u2500 solrcore \u2502\xa0\xa0 \u2514\u2500\u2500 solrlib \u251c\u2500\u2500 private \u2502\xa0\xa0 \u2514\u2500\u2500 webform \u251c\u2500\u2500 scripts \u2502\xa0\xa0 \u251c\u2500\u2500 archipelago \u2502\xa0\xa0 \u2514\u2500\u2500 composer \u251c\u2500\u2500 vendor \u2502\xa0\xa0 \u251c\u2500\u2500 archipelago \u2502\xa0\xa0 \u251c\u2500\u2500 asm89 \u2502\xa0\xa0 \u251c\u2500\u2500 aws \u2502\xa0\xa0 \u251c\u2500\u2500 behat \u2502\xa0\xa0 \u251c\u2500\u2500 bin \u2502\xa0\xa0 \u251c\u2500\u2500 brick \u2502\xa0\xa0 \u251c\u2500\u2500 chi-teck \u2502\xa0\xa0 \u251c\u2500\u2500 composer \u2502\xa0\xa0 \u251c\u2500\u2500 consolidation \u2502\xa0\xa0 \u251c\u2500\u2500 container-interop \u2502\xa0\xa0 \u251c\u2500\u2500 cweagans \u2502\xa0\xa0 \u251c\u2500\u2500 data-values \u2502\xa0\xa0 \u251c\u2500\u2500 dflydev \u2502\xa0\xa0 \u251c\u2500\u2500 doctrine \u2502\xa0\xa0 \u251c\u2500\u2500 drupal \u2502\xa0\xa0 \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 easyrdf \u2502\xa0\xa0 \u251c\u2500\u2500 egulias \u2502\xa0\xa0 \u251c\u2500\u2500 enlightn \u2502\xa0\xa0 \u251c\u2500\u2500 erusev \u2502\xa0\xa0 \u251c\u2500\u2500 evenement \u2502\xa0\xa0 \u251c\u2500\u2500 ezyang \u2502\xa0\xa0 \u251c\u2500\u2500 fabpot \u2502\xa0\xa0 \u251c\u2500\u2500 fileeye \u2502\xa0\xa0 \u251c\u2500\u2500 firebase \u2502\xa0\xa0 \u251c\u2500\u2500 frictionlessdata \u2502\xa0\xa0 \u251c\u2500\u2500 google \u2502\xa0\xa0 \u251c\u2500\u2500 graham-campbell \u2502\xa0\xa0 \u251c\u2500\u2500 grasmash \u2502\xa0\xa0 \u251c\u2500\u2500 guzzlehttp \u2502\xa0\xa0 \u251c\u2500\u2500 instaclick \u2502\xa0\xa0 \u251c\u2500\u2500 jcalderonzumba \u2502\xa0\xa0 \u251c\u2500\u2500 jean85 \u2502\xa0\xa0 \u251c\u2500\u2500 jmikola \u2502\xa0\xa0 \u251c\u2500\u2500 justinrainbow \u2502\xa0\xa0 \u251c\u2500\u2500 laminas \u2502\xa0\xa0 \u251c\u2500\u2500 league \u2502\xa0\xa0 \u251c\u2500\u2500 lsolesen \u2502\xa0\xa0 \u251c\u2500\u2500 maennchen \u2502\xa0\xa0 \u251c\u2500\u2500 markbaker \u2502\xa0\xa0 \u251c\u2500\u2500 masterminds \u2502\xa0\xa0 \u251c\u2500\u2500 mglaman \u2502\xa0\xa0 \u251c\u2500\u2500 mhor \u2502\xa0\xa0 \u251c\u2500\u2500 mikey179 \u2502\xa0\xa0 \u251c\u2500\u2500 mixnode \u2502\xa0\xa0 \u251c\u2500\u2500 ml \u2502\xa0\xa0 \u251c\u2500\u2500 monolog \u2502\xa0\xa0 \u251c\u2500\u2500 mtdowling \u2502\xa0\xa0 \u251c\u2500\u2500 myclabs \u2502\xa0\xa0 \u251c\u2500\u2500 nesbot \u2502\xa0\xa0 \u251c\u2500\u2500 nette \u2502\xa0\xa0 \u251c\u2500\u2500 nikic \u2502\xa0\xa0 \u251c\u2500\u2500 paragonie \u2502\xa0\xa0 \u251c\u2500\u2500 pear \u2502\xa0\xa0 \u251c\u2500\u2500 phar-io \u2502\xa0\xa0 \u251c\u2500\u2500 phenx \u2502\xa0\xa0 \u251c\u2500\u2500 phpdocumentor \u2502\xa0\xa0 \u251c\u2500\u2500 phplang \u2502\xa0\xa0 \u251c\u2500\u2500 phpmailer \u2502\xa0\xa0 \u251c\u2500\u2500 phpoffice \u2502\xa0\xa0 \u251c\u2500\u2500 phpoption \u2502\xa0\xa0 \u251c\u2500\u2500 phpseclib \u2502\xa0\xa0 \u251c\u2500\u2500 phpspec \u2502\xa0\xa0 \u251c\u2500\u2500 phpstan \u2502\xa0\xa0 \u251c\u2500\u2500 phpunit \u2502\xa0\xa0 \u251c\u2500\u2500 professional-wiki \u2502\xa0\xa0 \u251c\u2500\u2500 psr \u2502\xa0\xa0 \u251c\u2500\u2500 psy \u2502\xa0\xa0 \u251c\u2500\u2500 ralouphie \u2502\xa0\xa0 \u251c\u2500\u2500 ramsey \u2502\xa0\xa0 \u251c\u2500\u2500 react \u2502\xa0\xa0 \u251c\u2500\u2500 sebastian \u2502\xa0\xa0 \u251c\u2500\u2500 seld \u2502\xa0\xa0 \u251c\u2500\u2500 sirbrillig \u2502\xa0\xa0 \u251c\u2500\u2500 solarium \u2502\xa0\xa0 \u251c\u2500\u2500 squizlabs \u2502\xa0\xa0 \u251c\u2500\u2500 stack \u2502\xa0\xa0 \u251c\u2500\u2500 strawberryfield \u2502\xa0\xa0 \u251c\u2500\u2500 swaggest \u2502\xa0\xa0 \u251c\u2500\u2500 symfony \u2502\xa0\xa0 \u251c\u2500\u2500 symfony-cmf \u2502\xa0\xa0 \u251c\u2500\u2500 theseer \u2502\xa0\xa0 \u251c\u2500\u2500 twbs \u2502\xa0\xa0 \u251c\u2500\u2500 twig \u2502\xa0\xa0 \u251c\u2500\u2500 typo3 \u2502\xa0\xa0 \u251c\u2500\u2500 vlucas \u2502\xa0\xa0 \u251c\u2500\u2500 web64 \u2502\xa0\xa0 \u251c\u2500\u2500 webflo \u2502\xa0\xa0 \u251c\u2500\u2500 webmozart \u2502\xa0\xa0 \u251c\u2500\u2500 wikibase \u2502\xa0\xa0 \u251c\u2500\u2500 wikimedia \u2502\xa0\xa0 \u2514\u2500\u2500 zaporylie \u251c\u2500\u2500 web \u2502\xa0\xa0 \u251c\u2500\u2500 core \u2502\xa0\xa0 \u251c\u2500\u2500 libraries \u2502\xa0\xa0 \u251c\u2500\u2500 modules \u2502\xa0\xa0 \u251c\u2500\u2500 profiles \u2502\xa0\xa0 \u251c\u2500\u2500 sites \u2502\xa0\xa0 \u2514\u2500\u2500 themes")))),(0,a.kt)("h2",{id:"the-data"},"The Data"),(0,a.kt)("p",null,"Let's start by focusing on the ",(0,a.kt)("inlineCode",{parentName:"p"},"data"),", in our case the Database, Solr, and File (S3 + Private) storage. Collapsing here a few folders will make this easier to read.\nMarked with a ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," are matching folders that contain DB, Solr Core, the S3 min.io data (if you are using local storage) and also Drupal's very own ",(0,a.kt)("inlineCode",{parentName:"p"},"private")," folder:"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"archipelago-deployment Live"),(0,a.kt)("th",null,"archipelago-deployment")),(0,a.kt)("tr",null,(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 config_storage \u251c\u2500\u2500 data_storage \u2502\xa0\xa0 \u251c\u2500\u2500 * db * \u2502\xa0\xa0 \u251c\u2500\u2500 iiifcache \u2502\xa0\xa0 \u251c\u2500\u2500 iiiftmp \u2502\xa0\xa0 \u251c\u2500\u2500 letsencrypt \u2502\xa0\xa0 \u251c\u2500\u2500 * minio-data * \u2502\xa0\xa0 \u251c\u2500\u2500 ngnixcache \u2502\xa0\xa0 \u251c\u2500\u2500 selfcert \u2502\xa0\xa0 \u251c\u2500\u2500 solrcore \u2502\xa0\xa0 \u2514\u2500\u2500 solrlib \u251c\u2500\u2500 deploy \u251c\u2500\u2500 docs \u2514\u2500\u2500 drupal \u2502   \u251c\u2500\u2500 config \u2502\xa0\xa0 \u251c\u2500\u2500 d8content \u2502\xa0\xa0 \u251c\u2500\u2500 docs \u2502\xa0\xa0 \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 patches \u2502\xa0\xa0 \u251c\u2500\u2500 persistent \u2502\xa0\xa0 \u251c\u2500\u2500 * private * \u2502\xa0\xa0 \u251c\u2500\u2500 scripts \u2502\xa0\xa0 \u251c\u2500\u2500 vendor \u2502\xa0\xa0 \u251c\u2500\u2500 web \u2502\xa0\xa0 \u2514\u2500\u2500 xdebug")),(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 config \u251c\u2500\u2500 d8content \u251c\u2500\u2500 docs \u251c\u2500\u2500 drush \u251c\u2500\u2500 nginxconfigford8 \u251c\u2500\u2500 patches \u251c\u2500\u2500 persistent \u2502\xa0\xa0 \u251c\u2500\u2500 * db * \u2502\xa0\xa0 \u251c\u2500\u2500 iiifcache \u2502\xa0\xa0 \u251c\u2500\u2500 iiifconfig \u2502\xa0\xa0 \u251c\u2500\u2500 * miniodata * \u2502\xa0\xa0 \u251c\u2500\u2500 solrconfig \u2502\xa0\xa0 \u251c\u2500\u2500 * solrcore * \u2502\xa0\xa0 \u2514\u2500\u2500 solrlib \u251c\u2500\u2500 * private * \u251c\u2500\u2500 scripts \u251c\u2500\u2500 vendor \u251c\u2500\u2500 web")))),(0,a.kt)("h3",{id:"copying-the-data-into-the-new-structure"},"Copying the Data into the new Structure"),(0,a.kt)("p",null,"To do so we need to stop Docker again. This is needed because Databases sometimes keep an open Change Log and Locks in place, and if there is any interaction or cron running, your data may end up corrupted."),(0,a.kt)("h4",{id:"step-1-1"},"Step 1:"),(0,a.kt)("p",null,"Shut down your ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," ensemble. Inside your original ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," folder run this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose down\n")),(0,a.kt)("h4",{id:"step-2-1"},"Step 2:"),(0,a.kt)("p",null,"Verify all containers are actually down:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker ps\n")),(0,a.kt)("h4",{id:"step-3-1"},"Step 3:"),(0,a.kt)("p",null,"We will copy DB, min.io (File and ADO storage as files) and Drupal's private (temporary files, caches) folders to its new place:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo cp -rpv persistent/db ../archipelago-deployment-live/data_storage/db\nsudo cp -rpv persistent/solrcore ../archipelago-deployment-live/data_storage/solrcore\nsudo cp -rpv persistent/miniodata ../archipelago-deployment-live/data_storage/minio-data\nsudo cp -rpv private ../archipelago-deployment-live/drupal/private\n")),(0,a.kt)("p",null,"Running ",(0,a.kt)("inlineCode",{parentName:"p"},"-rpv")," will copy verbosely and recursively while preserving original permissions."),(0,a.kt)("p",null,"Done!"),(0,a.kt)("p",null,"You can now start ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," again:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker-compose up -d\n")),(0,a.kt)("h2",{id:"the-web"},"The Web"),(0,a.kt)("p",null,"Collapsing again a few folders to aid in readability, we can now focus on your actual Drupal/Archipelago Code/Web and settings. To be honest (we are), you can easily reinstall and restore all this via ",(0,a.kt)("inlineCode",{parentName:"p"},"composer"),", but we can also move folders as a learning experience/time and bandwidth experience. Marked with a ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," are matching folders you want to copy over:"),(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"archipelago-deployment Live"),(0,a.kt)("th",null,"archipelago-deployment")),(0,a.kt)("tr",null,(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 config_storage \u251c\u2500\u2500 data_storage \u251c\u2500\u2500 deploy \u251c\u2500\u2500 docs \u2514\u2500\u2500 drupal \u2502   \u251c\u2500\u2500 * config * \u2502\xa0\xa0 \u251c\u2500\u2500 d8content \u2502\xa0\xa0 \u251c\u2500\u2500 docs \u2502\xa0\xa0 \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 patches \u2502\xa0\xa0 \u251c\u2500\u2500 persistent \u2502\xa0\xa0 \u251c\u2500\u2500 private \u2502\xa0\xa0 \u251c\u2500\u2500 scripts \u2502\xa0\xa0 \u251c\u2500\u2500 * vendor * \u2502\xa0\xa0 \u251c\u2500\u2500 * web * \u2502\xa0\xa0 \u2514\u2500\u2500 xdebug")),(0,a.kt)("td",{valign:"top"},(0,a.kt)("pre",null,". \u251c\u2500\u2500 * config * \u2502\xa0\xa0 \u2514\u2500\u2500 sync \u251c\u2500\u2500 d8content \u2502\xa0\xa0 \u2514\u2500\u2500 metadatadisplays \u251c\u2500\u2500 docs \u251c\u2500\u2500 drush \u2502\xa0\xa0 \u251c\u2500\u2500 Commands \u2502\xa0\xa0 \u2514\u2500\u2500 sites \u251c\u2500\u2500 nginxconfigford8 \u251c\u2500\u2500 patches \u251c\u2500\u2500 persistent \u251c\u2500\u2500 private \u251c\u2500\u2500 scripts \u251c\u2500\u2500 * vendor * \u251c\u2500\u2500 * web *")))),(0,a.kt)("h3",{id:"copying-the-web-into-the-new-structure"},"Copying the Web into the new Structure"),(0,a.kt)("p",null,"No need to stop Docker again. We can do this while your Archipelago is still running."),(0,a.kt)("h4",{id:"step-1-2"},"Step 1:"),(0,a.kt)("p",null,"We will copy all important folders over. From your ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," folder run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo cp -rpv vendor ../archipelago-deployment-live/drupal/vendor\nsudo cp -rpv web ../archipelago-deployment-live/drupal/web\nsudo cp -rpv config ../archipelago-deployment-live/drupal/config\n")),(0,a.kt)("p",null,"And also, selectively, a few files we know you are very fond of!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sudo cp -rpv composer.json ../archipelago-deployment-live/drupal/composer.json\nsudo cp -rpv composer.lock ../archipelago-deployment-live/drupal/composer.lock\n")),(0,a.kt)("p",null,"Done!"),(0,a.kt)("h2",{id:"ssl-enviromentals-configurations-settings-and-docker"},"SSL, Enviromentals, Configurations, Settings and Docker"),(0,a.kt)("p",null,"We are almost done, but ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment-live")," has a different, safer way of defining SSL Certs, credentials, and global settings for your Archipelago.\nWe will start first by copying settings as they are (most likely not very safe), and then we can update passwords/etc. to make your system better-prepared for the world."),(0,a.kt)("p",null,"To learn more about these general settings please read ",(0,a.kt)("a",{parentName:"p",href:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-readme#step-3-setup-your-enviromental-variables-for-dockerservices"},"this section of the parent Documentation")," (who likes duplicated documentation? Nobody.).\nThe gist here is (after reading, please do not skip) that we need to add our service definitions into a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,a.kt)("p",null,"Coming from ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," means and assumes that you are running AWS Linux 2 using the suggested locations in this document, that you have a vanilla deployment, and that you followed ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/esmero/archipelago-deployment/blob/1.0.0-RC2/archipelago-deployment-ubuntu.md"},"these instructions"),") so your values for ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/archipelago-deployment-live/deploy/ec2-docker/.env")," will be the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"ARCHIPELAGO_ROOT=/home/ec2-user/archipelago-deployment-live\nARCHIPELAGO_EMAIL=your@validemail.org\nARCHIPELAGO_DOMAIN=your.domain.org\nMINIO_ACCESS_KEY=minio\nMINIO_SECRET_KEY=minio123\nMYSQL_ROOT_PASSWORD=esmero-db\nMINIO_BUCKET_MEDIA=archipelago\nMINIO_FOLDER_PREFIX_MEDIA=/\nMINIO_BUCKET_CACHE=archipelago\nMINIO_FOLDER_PREFIX_CACHE=/\n")),(0,a.kt)("p",null,"If you plan on staying on local storage driven ",(0,a.kt)("inlineCode",{parentName:"p"},"min.io"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MINIO_BUCKET_CACHE")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"MINIO_FOLDER_PREFIX_CACHE")," are not going to be used. If you are planning on moving your Storage from local to cloud driven please replace with the right values, e.g. AWS IAM keys and Secrets + bucket names and prefixes (folders).\nAgain, refer to the ",(0,a.kt)("a",{parentName:"p",href:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-readme#step-3-setup-your-enviromental-variables-for-dockerservices"},"parent Documentation")," for setting this up."),(0,a.kt)("p",null,"Once you have that in place (Double-check. If something goes wrong here we can always fine-tune and fix again.), we need to decide on a new ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," file, and you may need to customize it depending on your choices and current and future needs."),(0,a.kt)("p",null,"If you already have an SSL certificate, and it's provided by ",(0,a.kt)("inlineCode",{parentName:"p"},"CertBot")," you can either copy the certs from your current system (will totally depend on your setup since ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," does not provide out-of-the-box SSL Certs) to ",(0,a.kt)("inlineCode",{parentName:"p"},"$HOME/archipelago-deployment-live/data_storage/letsencrypt"),"."),(0,a.kt)("p",null,"A normal folder structure for that is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},".\n\u251c\u2500\u2500 accounts\n\u2502\xa0\xa0 \u2514\u2500\u2500 acme-v02.api.letsencrypt.org\n\u2502\xa0\xa0     \u2514\u2500\u2500 directory\n\u2502\xa0\xa0         \u2514\u2500\u2500 cac9f8218ef18e4f11ec053785bbf648\n\u2502\xa0\xa0             \u251c\u2500\u2500 meta.json\n\u2502\xa0\xa0             \u251c\u2500\u2500 private_key.json\n\u2502\xa0\xa0             \u2514\u2500\u2500 regr.json\n\u251c\u2500\u2500 archive\n\u2502\xa0\xa0 \u251c\u2500\u2500 your.domain.org\n\u2502\xa0\xa0  \xa0\xa0 \u251c\u2500\u2500 cert1.pem\n\u2502\xa0\xa0  \xa0\xa0 \u251c\u2500\u2500 chain1.pem\n\u2502\xa0\xa0  \xa0\xa0 \u251c\u2500\u2500 fullchain1.pem\n\u2502\xa0\xa0  \xa0\xa0 \u2514\u2500\u2500 privkey1.pem\n\u2502\xa0\n\u251c\u2500\u2500 csr\n\u2502\xa0\xa0 \u251c\u2500\u2500 0000_csr-certbot.pem\n\u2502\xa0\xa0 \u251c\u2500\u2500 0001_csr-certbot.pem\n\u2502\xa0\xa0 \u251c\u2500\u2500 0002_csr-certbot.pem\n\u2502\xa0\xa0 \u2514\u2500\u2500 0003_csr-certbot.pem\n\u251c\u2500\u2500 keys\n\u2502\xa0\xa0 \u251c\u2500\u2500 0000_key-certbot.pem\n\u2502\xa0\xa0 \u251c\u2500\u2500 0001_key-certbot.pem\n\u2502\xa0\xa0 \u251c\u2500\u2500 0002_key-certbot.pem\n\u2502\xa0\xa0 \u2514\u2500\u2500 0003_key-certbot.pem\n\u251c\u2500\u2500 live\n\u2502\xa0\xa0 \u251c\u2500\u2500 README\n\u2502\xa0\xa0 \u2514\u2500\u2500 your.domain.org\n\u2502\xa0\xa0 \xa0\xa0 \u251c\u2500\u2500 cert.pem -> ../../archive/your.domain.org/cert1.pem\n\u2502\xa0\xa0 \xa0\xa0 \u251c\u2500\u2500 chain.pem -> ../../archive/your.domain.org/chain1.pem\n\u2502\xa0\xa0 \xa0\xa0 \u251c\u2500\u2500 fullchain.pem -> ../../archive/your.domain.org/fullchain1.pem\n\u2502\xa0\xa0 \xa0\xa0 \u251c\u2500\u2500 privkey.pem -> ../../archive/your.domain.org/privkey1.pem\n\u2502\xa0\xa0 \xa0\xa0 \u2514\u2500\u2500 README\n\u251c\u2500\u2500 renewal\n\u2502\xa0\xa0 \u2514\u2500\u2500 your.domain.org.conf\n\u2502\xa0\xa0 \n\u2514\u2500\u2500 renewal-hooks\n    \u251c\u2500\u2500 deploy\n    \u251c\u2500\u2500 post\n    \u2514\u2500\u2500 pre\n")),(0,a.kt)("p",null,"Or if your SSL cert is up for renewal, you can just let Archipelago request it for you. Renewal will happen auto-magically, and you may never ever need to worry about that in the future."),(0,a.kt)("p",null,"Finally, let's adapt the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," file we need to our previous (but still current!) ",(0,a.kt)("inlineCode",{parentName:"p"},"archipelago-deployment")," reality."),(0,a.kt)("p",null,"For x86/AMD, run (for ARM64/Apple M1 please check the ",(0,a.kt)("a",{parentName:"p",href:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-readme#deployment-on-arm64v8graviton-apple-m1-system"},"parent Documentation"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cp $home/archipelago-deployment-live/deploy/ec2-docker/docker-compose-aws-s3.yml $home/archipelago-deployment-live/deploy/ec2-docker/docker-compose.yml\nnano $home/archipelago-deployment-live/deploy/ec2-docker/docker-compose.yml\n")),(0,a.kt)("p",null,"And replace the content with this slightly modified version. Note: we really only changed the lines after this comment: ",(0,a.kt)("inlineCode",{parentName:"p"},"# THIS DIFFERS FROM THE NORMAL ONE..."),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'# Run docker-compose up -d\n\nversion: \'3.5\'\nservices:\n  web:\n    container_name: esmero-web\n    image: staticfloat/nginx-certbot\n    restart: always\n    environment:\n      CERTBOT_EMAIL: ${ARCHIPELAGO_EMAIL}\n      ENVSUBST_VARS: FQDN\n      FQDN: ${ARCHIPELAGO_DOMAIN}\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/config_storage/nginxconfig/conf.d:/etc/nginx/user.conf.d\n      - ${ARCHIPELAGO_ROOT}/config_storage/nginxconfig/certbot_extra_domains:/etc/nginx/certbot/extra_domains:ro\n      - ${ARCHIPELAGO_ROOT}/drupal:/var/www/html:cached\n      - ${ARCHIPELAGO_ROOT}/data_storage/ngnixcache:/var/cache/nginx\n      - ${ARCHIPELAGO_ROOT}/data_storage/letsencrypt:/etc/letsencrypt\n    depends_on:\n      - solr\n      - php\n      - db\n    tty: true\n    networks:\n      - host-net\n      - esmero-net\n  php:\n    container_name: esmero-php\n    restart: always\n    image: "esmero/php-7.4-fpm:1.0.0-RC2-multiarch"\n    tty: true\n    networks:\n      - host-net\n      - esmero-net\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/config_storage/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf\n      - ${ARCHIPELAGO_ROOT}/drupal:/var/www/html:cached\n    environment:\n      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}\n      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}\n      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n      MINIO_BUCKET_MEDIA: ${MINIO_BUCKET_MEDIA}\n      MINIO_FOLDER_PREFIX_MEDIA: ${MINIO_FOLDER_PREFIX_MEDIA}\n  solr:\n    container_name: esmero-solr\n    restart: always\n    image: "solr:8.8.2"\n    tty: true\n    ports:\n      - "8983:8983"\n    networks:\n      - host-net\n      - esmero-net\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/data_storage/solrcore:/var/solr/data\n      - ${ARCHIPELAGO_ROOT}/config_storage/solrconfig:/drupalconfig\n      - ${ARCHIPELAGO_ROOT}/data_storage/solrlib:/opt/solr/contrib/archipelago/lib\n    entrypoint:\n      - docker-entrypoint.sh\n      - solr-precreate\n      - drupal\n      - /drupalconfig\n  db:\n    image: mysql:8.0.22\n    command: mysqld --default-authentication-plugin=mysql_native_password  --max_allowed_packet=256M\n    container_name: esmero-db\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}\n    networks:\n      - host-net\n      - esmero-net\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/data_storage/db:/var/lib/mysql\n  nlp:\n    container_name: esmero-nlp\n    restart: always\n    image: "esmero/esmero-nlp:1.0"\n    ports:\n      - "6400:6400"\n    networks:\n      - host-net\n      - esmero-net\n  iiif:\n    container_name: esmero-cantaloupe\n    image: "esmero/cantaloupe-s3:4.1.9RC"\n    restart: always\n    ports:\n      - "8183:8182"\n    networks:\n      - host-net\n      - esmero-net\n    environment:\n      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}\n      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}\n      # THIS DIFFERS FROM THE STANDARD ONE AND ENABLES LOCAL FILESYSTEM CACHE INSTEAD OF AWS S3 one\n      CACHE_SERVER_DERIVATIVE: FilesystemCache\n      S3SOURCE_BASICLOOKUPSTRATEGY_BUCKET_NAME: ${MINIO_BUCKET_MEDIA}\n      S3SOURCE_BASICLOOKUPSTRATEGY_PATH_PREFIX: ${MINIO_FOLDER_PREFIX_MEDIA}\n      S3CACHE_BUCKET_NAME: ${MINIO_BUCKET_CACHE} \n      S3CACHE_OBJECT_KEY_PREFIX: ${MINIO_FOLDER_PREFIX_CACHE} \n      XMS: 2g\n      XMX: 4g\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/config_storage/iiifconfig:/etc/cantaloupe\n      - ${ARCHIPELAGO_ROOT}/data_storage/iiifcache:/var/cache/cantaloupe\n      - ${ARCHIPELAGO_ROOT}/data_storage/iiiftmp:/var/cache/cantaloupe_tmp\n  minio:\n    container_name: esmero-minio\n    restart: always\n    image: minio/minio:latest\n    volumes:\n      - ${ARCHIPELAGO_ROOT}/data_storage/minio-data:/data:cached\n    ports:\n      - "9000:9000"\n      - "9001:9001"\n    networks:\n      - host-net\n      - esmero-net\n    environment:\n      MINIO_HTTP_TRACE: /tmp/minio-log.txt\n      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}\n      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}\n      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}\n      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}\n      # THIS DIFFERS FROM THE STANDARD ONE AND ENABLES LOCAL MINIO INSTEAD OF AWS S3 one \n    command: server /data --console-address ":9001"\nnetworks:\n  host-net:\n    driver: bridge\n  esmero-net:\n    driver: bridge\n    internal: true\n\n')),(0,a.kt)("p",null,"Press CNTRL-X, and you are done.\nNow the final test!!"),(0,a.kt)("h2",{id:"shutdown-the-old-one-start-the-new-one"},"Shutdown the old one, start the new one"),(0,a.kt)("p",null,"So we are ready. Testing may be a hit-or-miss thing here. Did we cover all the steps? Did a command fail? The good thing is that we can start the new ensemble, and all our old ones will survive. And we can come back over and over until we are ready. Let's try!"),(0,a.kt)("p",null,"We will start by shutting down the running Docker ensemble:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd $HOME/archipelago-deployment\ndocker-compose down\n")),(0,a.kt)("p",null,"Now let's go to our new deployment. Docker starts here in a different folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd $HOME/archipelago-deployment-live/deploy/ec2-docker\ndocker-compose up\n")),(0,a.kt)("p",null,"You may notice that we removed the ",(0,a.kt)("inlineCode",{parentName:"p"},"-d"),". Why? We want to see all the messages and notice/mark/copy any errors, e.g. did the SSL CERT load correctly? Did the MYSQL import work out?\nTo avoid shutting it down while all starts, please open another Terminal and type:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker ps\n")),(0,a.kt)("p",null,"And look at the up-times. Do you see any Containers restarting (where Created and the Status differ for a lot and Status keeps resetting to 0?)? A healthy deployment will look similar to this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'CONTAINER ID   IMAGE                                    COMMAND                  CREATED          STATUS         PORTS                                      NAMES\nf794c25db64c   esmero/cantaloupe-s3:4.1.9RC2-arm64      "sh -c \'java -Dcanta\u2026"   6 seconds ago    Up 3 seconds   0.0.0.0:8183->8182/tcp                     esmero-cantaloupe\n5b791445720f   jonasal/nginx-certbot                    "/docker-entrypoint.\u2026"   6 seconds ago    Up 3 seconds   0.0.0.0:80->80/tcp, 0.0.0.0:443->443/tcp   esmero-web\ne38fbbd86edf   esmero/esmero-nlp:1.0.1-RC2-arm64        "/usr/local/bin/entr\u2026"   11 seconds ago   Up 6 seconds   0.0.0.0:6400->6400/tcp                     esmero-nlp\nc84a0a4d43e9   minio/minio:latest                       "/usr/bin/docker-ent\u2026"   11 seconds ago   Up 6 seconds   0.0.0.0:9000-9001->9000-9001/tcp           esmero-minio\n3ec176a960c3   esmero/php-7.4-fpm:1.0.0-RC2-multiarch   "docker-php-entrypoi\u2026"   11 seconds ago   Up 6 seconds   9000/tcp                                   esmero-php\ne762ad7ea5e2   solr:8.8.2                               "docker-entrypoint.s\u2026"   11 seconds ago   Up 6 seconds   0.0.0.0:8983->8983/tcp                     esmero-solr\n381166d61f8c   mariadb:10.5.10-focal                    "docker-entrypoint.s\u2026"   11 seconds ago   Up 6 seconds   3306/tcp      \n')),(0,a.kt)("p",null,"If you feel that all seems to be fine, open a browser window and visit your website. See if you can log in and see ADOs.\nIf not you can momentarily shut down this new Docker ensemble and restart the older one. Nothing is lost!\nThen with time and tea/coffee and fresh eyes come back and re-trace your steps. 95% of the issues are incorrect values in the ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file. The other 5% may be on us.\nIf you run into any trouble please get in touch!"),(0,a.kt)("p",null,"Happy deploying!"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"Thank you for reading! Please contact us on our ",(0,a.kt)("a",{parentName:"p",href:"https://groups.google.com/forum/#!forum/archipelago-commons"},"Archipelago Commons Google Group")," with any questions or feedback, or open an ISSUE in this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/esmero/archipelago-deployment-live/"},"Archipelago Deployment Live Repository"),"."),(0,a.kt)("p",null,"Return to ",(0,a.kt)("a",{parentName:"p",href:"/archipelago-documentation-docusaurus/docs/archipelago-deployment-live-readme"},"Archipelago Live Deployment"),"."))}u.isMDXComponent=!0}}]);